var VenomBall = function(x, y, velX, velY){	this.x = x;	this.y = y;		this.vel = {		x: velX,		y: velY	};		this.computeDegree();		this.idleAnimation = AnimationManager.create('VenomBall_idle', 0, 6, 24);		this.currentAnimation = cc.Sprite.createWithSpriteFrameName('VenomBall_idle.0000.png');	this.currentAnimation.setZOrder(Constants.Trigger.Z_ORDER);	this.currentAnimation.setRotation(this.degree);		Smoothering.init(this, x, y);		this.currentAnimation.runAction(cc.RepeatForever.create(this.idleAnimation));		Client.game.layer.addChild(this.currentAnimation);		var hypo = Math.sqrt(Math.pow(this.vel.x,2) + Math.pow(this.vel.y, 2));		//Start effects.	AudioManager.playEffect(Constants.Sound.File.Deflector.SPAWN, false);	EffectManager.create(Enum.Effect.Type.VENOM_BALL_THROW, 						 this.x + (this.vel.x/hypo*Constants.Trigger.VenomBall.THROW_OFFSET), 						 this.y + (this.vel.y/hypo*Constants.Trigger.VenomBall.THROW_OFFSET), 						 this.degree);};VenomBall.prototype.computeDegree = function(){		if(this.vel.x == 0)	{		this.degree = 90*(this.vel.y < 0 ? 1 : -1);		return;	}		//Get right degree.	var quadrantPlusFactor = 0;	var quadrantMinusFactor = 0;		if(this.vel.x < 0 && this.vel.y < 0)		quadrantMinusFactor = 180;	if(this.vel.x < 0 && this.vel.y >= 0)		quadrantPlusFactor = 180;	if(this.vel.x >= 0 && this.vel.y >= 0)		quadrantMinusFactor = 360;		this.degree = quadrantMinusFactor - Math.atan(this.vel.y/this.vel.x)*180/Math.PI + quadrantPlusFactor;};VenomBall.prototype.render = function(){	Client.game.camera.project(this.currentAnimation, this.x, this.y);};VenomBall.prototype.update = function(dt){	//Update position.	var newPos = Smoothering.pop(this);		if(newPos.x != this.x || newPos.y != this.y)		this.setPosition(newPos.x, newPos.y);			this.currentAnimation.setRotation(this.degree);};VenomBall.prototype.execute = function(type){};VenomBall.prototype.explode = function(){	Client.game.layer.removeChild(this.currentAnimation);		Smoothering.reset(this);		var newPos = Smoothering.pop(this);		if(newPos.x != this.x || newPos.y != this.y)		this.setPosition(newPos.x, newPos.y);		AudioManager.playEffect(Constants.Sound.File.Deflector.DISAPPEARING, false);			var hypo = Math.sqrt(Math.pow(this.vel.x,2) + Math.pow(this.vel.y, 2));	EffectManager.create(Enum.Effect.Type.VENOM_BALL_END, 						 this.x + (this.vel.x/hypo*Constants.Trigger.VenomBall.END_OFFSET), 						 this.y + (this.vel.y/hypo*Constants.Trigger.VenomBall.END_OFFSET), 						 this.degree);};VenomBall.prototype.setPosition = function(x, y){	this.x = x;	this.y = y;};VenomBall.prototype.fromServer = function(remote){	Smoothering.push(this, remote.x, remote.y);		this.vel.x = remote.vel.x;	this.vel.y = remote.vel.y;		this.computeDegree();};