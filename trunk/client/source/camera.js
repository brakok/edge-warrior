var Camera = function(x, y, resWidth, resHeight, vpWidth, vpHeight, zoom, speedX, speedY, speedZoom){	this.x = x;	this.y = y;		this.speed = {		x: speedX,		y: speedY,		zoom: speedZoom	};		//TODO: Add a frame (acting like a boundary box around players).		this.focus = {		x: this.x,		y: this.y	};		this.resolution = {		width: resWidth,		height: resHeight	};		this.viewport = {		width: vpWidth,		height: vpHeight	};		this.zoom = zoom;	this.targetedZoom = zoom;		this.lookAt(x, y);};Camera.prototype.lookAt = function(x, y){	this.focus.x = x;	this.focus.y = y;};Camera.prototype.update = function(){	//Update zoom.	if(this.zoom != this.targetedZoom)	{		if(Math.abs(this.zoom - this.targetedZoom) > this.speed.zoom)			this.zoom += this.speed.zoom*(this.zoom < this.targetedZoom ? 1 : -1);		else			this.zoom = this.targetedZoom;	}	if(this.speed.x == null && this.speed.y == null)	{		this.x = this.focus.x;		this.y = this.focus.y;				return;	}	//Translate X.	if(this.x != this.focus.x)	{		if(Math.abs(this.x - this.focus.x) > this.speed.x)			this.x += this.speed.x*(this.x > this.focus.x ? -1 : 1);		else			this.x = this.focus.x;	}		//Translate Y.	if(this.y != this.focus.y)	{		if(Math.abs(this.y - this.focus.y) > this.speed.y)			this.y += this.speed.y*(this.y > this.focus.y ? -1 : 1);		else			this.y = this.focus.y;	}};Camera.prototype.project = function(sprite, x, y, scaleX, scaleY){		//Position.	var factorX = this.resolution.width/this.viewport.width;	var factorY = this.resolution.height/this.viewport.height;				x = (x*this.zoom - (this.x*this.zoom - this.viewport.width*0.5))*factorX;	y = (y*this.zoom - (this.y*this.zoom - this.viewport.height*0.5))*factorY;		sprite.setPosition(new cc.Point(x, y));		//Scale.		var tmpScaleX = factorX*this.zoom;	var tmpScaleY = factorY*this.zoom;		if(scaleX != null)		tmpScaleX *= scaleX;	if(scaleY != null)		tmpScaleY *= scaleY;		sprite.setScale(tmpScaleX, tmpScaleY);};